<Application
    x:Class="AdminTool_wpf.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:AdminTool_wpf"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
    StartupUri="AuthWindow.xaml">
    <Application.Resources>
        <!--  Стиль верхнего бара  -->
        <Style x:Key="TopBorderStyle" TargetType="Border">
            <Setter Property="Margin" Value="3,2" />
            <Setter Property="Background" Value="#1D1E1F" />
            <Setter Property="CornerRadius" Value="10" />
        </Style>

        <!--  Шрифты  -->
        <FontFamily x:Key="RubikMonoOneFont">/AdminTool_wpf;component/Resources/RubikMonoOne-Regular.ttf#Rubik Mono One</FontFamily>
        <FontFamily x:Key="Raleway">/AdminTool_wpf;component/Resources/Raleway-Variablefont_wght.ttf#Raleway</FontFamily>

        <!--  ШАБЛОНЫ  -->
        <!--  DataGrid  -->
        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="CanUserReorderColumns" Value="False" />
            <Setter Property="Height" Value="290" />

            <Setter Property="RowBackground" Value="#262729" />
            <Setter Property="AlternatingRowBackground" Value="#262729" />
            <Setter Property="HeadersVisibility" Value="Column" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="GridLinesVisibility" Value="None" />
            <Setter Property="RowHeaderWidth" Value="0" />
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="SelectionMode" Value="Extended" />
            <Setter Property="SelectionUnit" Value="FullRow" />
        </Style>

        <Style x:Key="DataGridColumnHeaderStyle1" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background" Value="#23262b" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Height" Value="30" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="DemiBold" />
            <Setter Property="Margin" Value="7,0,0,0" />
            <Setter Property="FontFamily" Value="{StaticResource Raleway}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="20 20 0 0">
                            <ContentPresenter
                                Margin="7,2,0,2"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DataGridRowStyle1" TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="#232426" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Margin" Value="7,2,0,2" />

            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Height" Value="30" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontFamily" Value="{StaticResource Raleway}" />
            <Setter Property="VerticalAlignment" Value="Center" />

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#48494C" />
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#68696C" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DataGridCellStyle1" TargetType="{x:Type DataGridCell}">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Margin" Value="8,2,0,2" />
        </Style>

        <Style x:Key="VerticalScrollBarStyle" TargetType="{x:Type ScrollBar}">
            <Setter Property="Width" Value="10" />
            <Setter Property="Background" Value="#262729" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid>
                            <Rectangle
                                Height="Auto"
                                VerticalAlignment="Stretch"
                                Fill="#23262b"
                                RadiusX="10"
                                RadiusY="10" />
                            <Track
                                x:Name="PART_Track"
                                Grid.Column="0"
                                IsDirectionReversed="true">
                                <Track.Thumb>
                                    <Thumb Style="{DynamicResource ScrollThumbStyle}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Background" Value="#4e5561" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle
                            Width="13"
                            Margin="0,4,0,10"
                            HorizontalAlignment="Center"
                            Fill="{TemplateBinding Background}"
                            RadiusX="8"
                            RadiusY="8" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--  Кнопка закрытия приложения  -->
        <ControlTemplate x:Key="CloseButtonTemplate" TargetType="Button">
            <Border
                x:Name="border"
                Width="30"
                Height="30"
                Margin="6,2"
                HorizontalAlignment="Right"
                Background="#CE4E4E"
                CornerRadius="30"
                ToolTip="Закрыть">

                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Line
                        x:Name="line1"
                        Stroke="White"
                        StrokeThickness="2"
                        X1="0"
                        X2="10"
                        Y1="0"
                        Y2="10" />
                    <Line
                        x:Name="line2"
                        Stroke="White"
                        StrokeThickness="2"
                        X1="0"
                        X2="10"
                        Y1="10"
                        Y2="0" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="border" Property="Background" Value="#7a2525" />
                    <Setter TargetName="line1" Property="Stroke" Value="Black" />
                    <Setter TargetName="line2" Property="Stroke" Value="Black" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="border" Property="Background" Value="#5c1919" />
                    <Setter TargetName="border" Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="0.95" ScaleY="0.95" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!--  Кнопка сворачивания приложения  -->
        <ControlTemplate x:Key="MinimizeButtonTemplate" TargetType="Button">
            <Border
                x:Name="border"
                Width="30"
                Height="30"
                Margin="40,2"
                HorizontalAlignment="Right"
                Background="#F3F0F0"
                CornerRadius="30"
                ToolTip="Свернуть">

                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Line
                        x:Name="line1"
                        Margin="0,10,0,0"
                        Stroke="Black"
                        StrokeThickness="2"
                        X1="0"
                        X2="10"
                        Y1="0"
                        Y2="0" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="border" Property="Background" Value="#666965" />
                    <Setter TargetName="line1" Property="Stroke" Value="Black" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="border" Property="Background" Value="#3a3d3a" />
                    <Setter TargetName="border" Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="0.95" ScaleY="0.95" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!--  Кнопка управления в окнах кроме авторизации  -->
        <ControlTemplate x:Key="RegularButtonTemplate" TargetType="Button">
            <Border
                x:Name="border"
                Width="150"
                Height="45"
                Background="#3B3B47"
                CornerRadius="23">
                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="35" />
                        <ColumnDefinition Width="100" />
                    </Grid.ColumnDefinitions>
                    <Image
                        Grid.Column="0"
                        Width="35"
                        Height="35"
                        Source="{TemplateBinding Tag}" />
                    <ContentPresenter
                        Grid.Column="1"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Content="{TemplateBinding Content}"
                        TextElement.FontFamily="{StaticResource Raleway}"
                        TextElement.FontSize="18"
                        TextElement.FontWeight="DemiBold"
                        TextElement.Foreground="White" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="border" Property="Background" Value="#363645" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5" />
                    <Setter TargetName="border" Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="0.95" ScaleY="0.95" />
                        </Setter.Value>
                    </Setter>
                    <Setter TargetName="border" Property="Background" Value="#525269" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!--  Кнопка выхода из окна  -->
        <ControlTemplate x:Key="ExitButtonTemplate" TargetType="Button">
            <Border
                x:Name="border"
                Width="80"
                Height="45"
                Background="#3F1E1E"
                CornerRadius="23">
                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Image
                        Width="30"
                        Height="30"
                        Source="{TemplateBinding Tag}" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="border" Property="Background" Value="#633131" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5" />
                    <Setter TargetName="border" Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="0.95" ScaleY="0.95" />
                        </Setter.Value>
                    </Setter>
                    <Setter TargetName="border" Property="Background" Value="#291313" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!--  Чекбокс  -->
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070" />
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070" />
        <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}" />
            <Setter Property="BorderBrush" Value="#dae2ea" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="10,2,0,2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid
                            x:Name="templateRoot"
                            Background="Transparent"
                            SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border
                                x:Name="checkBoxBorder"
                                Margin="1"
                                Padding="1"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3">
                                <Grid x:Name="markGrid">
                                    <Path
                                        x:Name="optionMark"
                                        Margin="1"
                                        Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                        Fill="{StaticResource OptionMark.Static.Glyph}"
                                        Opacity="0"
                                        Stretch="None" />
                                    <Rectangle
                                        x:Name="indeterminateMark"
                                        Margin="2"
                                        Fill="{StaticResource OptionMark.Static.Glyph}"
                                        Opacity="0" />
                                </Grid>
                            </Border>
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Setter Property="Padding" Value="4,-1,0,0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.MouseOver.Background}" />
                                <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="#9575cd" />
                                <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                                <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.Disabled.Background}" />
                                <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.Disabled.Border}" />
                                <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.Disabled.Glyph}" />
                                <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.Disabled.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.Pressed.Background}" />
                                <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="Transparent" />
                                <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.Pressed.Glyph}" />
                                <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.Pressed.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                                <Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="optionMark" Property="Opacity" Value="0" />
                                <Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
